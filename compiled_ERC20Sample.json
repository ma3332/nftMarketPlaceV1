{
  "contracts": {
    "Context.sol": {
      "Context": {
        "abi": [],
        "evm": {
          "bytecode": {
            "functionDebugData": {},
            "generatedSources": [],
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x441be1e5187e7717c99b067fc904ec5a1528d8ee4a29d43e58a72fbe6219a218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54d9ad1c0adf5e86827fd19144e848f128c249c7ce9746824f3914ea0d07774\",\"dweb:/ipfs/QmZAS4jAYsQfmYjmHGuheswgQtBNpgrZWnZkUVdhmed6hx\"]}},\"version\":1}"
      }
    },
    "ERC20.sol": {
      "ERC20": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "allowance",
                "type": "uint256"
              },
              { "internalType": "uint256", "name": "needed", "type": "uint256" }
            ],
            "name": "ERC20InsufficientAllowance",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "balance",
                "type": "uint256"
              },
              { "internalType": "uint256", "name": "needed", "type": "uint256" }
            ],
            "name": "ERC20InsufficientBalance",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "approver",
                "type": "address"
              }
            ],
            "name": "ERC20InvalidApprover",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "receiver",
                "type": "address"
              }
            ],
            "name": "ERC20InvalidReceiver",
            "type": "error"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "sender", "type": "address" }
            ],
            "name": "ERC20InvalidSender",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "ERC20InvalidSpender",
            "type": "error"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "owner", "type": "address" },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              { "internalType": "uint256", "name": "", "type": "uint256" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              { "internalType": "uint256", "name": "value", "type": "uint256" }
            ],
            "name": "approve",
            "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              { "internalType": "uint256", "name": "", "type": "uint256" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "decimals",
            "outputs": [
              { "internalType": "uint8", "name": "", "type": "uint8" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              { "internalType": "string", "name": "", "type": "string" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              { "internalType": "string", "name": "", "type": "string" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              { "internalType": "uint256", "name": "", "type": "uint256" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "to", "type": "address" },
              { "internalType": "uint256", "name": "value", "type": "uint256" }
            ],
            "name": "transfer",
            "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "from", "type": "address" },
              { "internalType": "address", "name": "to", "type": "address" },
              { "internalType": "uint256", "name": "value", "type": "uint256" }
            ],
            "name": "transferFrom",
            "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "functionDebugData": {},
            "generatedSources": [],
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x441be1e5187e7717c99b067fc904ec5a1528d8ee4a29d43e58a72fbe6219a218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54d9ad1c0adf5e86827fd19144e848f128c249c7ce9746824f3914ea0d07774\",\"dweb:/ipfs/QmZAS4jAYsQfmYjmHGuheswgQtBNpgrZWnZkUVdhmed6hx\"]},\"ERC20.sol\":{\"keccak256\":\"0x992ed6137996415a4c9d0a41a8a8336e0cf8a6cc569a706788b1a2900a8cf7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a131946b65dfaf7d688d6f19c0ba58adea78f89f9bff64d2258c07fc3375b08b\",\"dweb:/ipfs/QmQzmDpxyE48u64o5HwtyxCu6TeQWxZJk7setCp5iUPzwD\"]},\"IERC20.sol\":{\"keccak256\":\"0x1c50cffbf03537659fa456fc2f38a9e9c634f0231068b96a5f52a5a9753e2c18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1741708992159b58d58295ad866d8cfa69022d43b440f906a9c6c918bc67ba\",\"dweb:/ipfs/Qme8napvk8oJTcyz2UpeuFHkDQgA8BFm2jic2RfHSByTX8\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xd6d5a0dfff9f1ffab84f5262f7ef5118aa9ff20202f9aed982b13707d8160be5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9c5176297845609eae60061c91661ab1584f3da18c802fbcb67d1a70405b1e3\",\"dweb:/ipfs/QmSaFn1GcDGYeWGETnjSKfRzV2gbAqwBZaqUzWEZQzkRA4\"]},\"draft-IERC6093.sol\":{\"keccak256\":\"0x95ff58432c2912acb75198376b6955d831e362cdc24c96de28b647d2c6177804\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://856f39586337f757fb0ba79c95167fd7b6b901619e594b7a9fb90d20addb8f16\",\"dweb:/ipfs/QmdJBZw9qgjvawfMV39HpRaTdqYdnaFSDEsHM9erf3t6C6\"]}},\"version\":1}"
      }
    },
    "ERC20Sample.sol": {
      "ERC20Sample": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "initialSupply",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "allowance",
                "type": "uint256"
              },
              { "internalType": "uint256", "name": "needed", "type": "uint256" }
            ],
            "name": "ERC20InsufficientAllowance",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "balance",
                "type": "uint256"
              },
              { "internalType": "uint256", "name": "needed", "type": "uint256" }
            ],
            "name": "ERC20InsufficientBalance",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "approver",
                "type": "address"
              }
            ],
            "name": "ERC20InvalidApprover",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "receiver",
                "type": "address"
              }
            ],
            "name": "ERC20InvalidReceiver",
            "type": "error"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "sender", "type": "address" }
            ],
            "name": "ERC20InvalidSender",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "ERC20InvalidSpender",
            "type": "error"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "owner", "type": "address" },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              { "internalType": "uint256", "name": "", "type": "uint256" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              { "internalType": "uint256", "name": "value", "type": "uint256" }
            ],
            "name": "approve",
            "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              { "internalType": "uint256", "name": "", "type": "uint256" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "decimals",
            "outputs": [
              { "internalType": "uint8", "name": "", "type": "uint8" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              { "internalType": "string", "name": "", "type": "string" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              { "internalType": "string", "name": "", "type": "string" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              { "internalType": "uint256", "name": "", "type": "uint256" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "to", "type": "address" },
              { "internalType": "uint256", "name": "value", "type": "uint256" }
            ],
            "name": "transfer",
            "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "from", "type": "address" },
              { "internalType": "address", "name": "to", "type": "address" },
              { "internalType": "uint256", "name": "value", "type": "uint256" }
            ],
            "name": "transferFrom",
            "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "functionDebugData": {
              "@_20": {
                "entryPoint": null,
                "id": 20,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@_73": {
                "entryPoint": null,
                "id": 73,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@_mint_376": {
                "entryPoint": 226,
                "id": 376,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@_update_343": {
                "entryPoint": 367,
                "id": 343,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "abi_decode_t_uint256_fromMemory": {
                "entryPoint": 968,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_tuple_t_uint256_fromMemory": {
                "entryPoint": 991,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_t_address_to_t_address_fromStack": {
                "entryPoint": 1948,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_uint256_to_t_uint256_fromStack": {
                "entryPoint": 2100,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                "entryPoint": 1965,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
                "entryPoint": 2117,
                "id": null,
                "parameterSlots": 4,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                "entryPoint": 2178,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "allocate_unbounded": {
                "entryPoint": null,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "array_dataslot_t_string_storage": {
                "entryPoint": 1199,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "array_length_t_string_memory_ptr": {
                "entryPoint": 1041,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "checked_add_t_uint256": {
                "entryPoint": 2041,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "clean_up_bytearray_end_slots_t_string_storage": {
                "entryPoint": 1510,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "cleanup_t_address": {
                "entryPoint": 1928,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_uint160": {
                "entryPoint": 1896,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_uint256": {
                "entryPoint": 932,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "clear_storage_range_t_bytes1": {
                "entryPoint": 1471,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "convert_t_uint256_to_t_uint256": {
                "entryPoint": 1345,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                "entryPoint": 1665,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "divide_by_32_ceil": {
                "entryPoint": 1220,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "extract_byte_array_length": {
                "entryPoint": 1146,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "extract_used_part_and_set_length_of_short_byte_array": {
                "entryPoint": 1635,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "identity": {
                "entryPoint": 1335,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "mask_bytes_dynamic": {
                "entryPoint": 1603,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "panic_error_0x11": {
                "entryPoint": 1994,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "panic_error_0x22": {
                "entryPoint": 1099,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "panic_error_0x41": {
                "entryPoint": 1052,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "prepare_store_t_uint256": {
                "entryPoint": 1385,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                "entryPoint": null,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                "entryPoint": 927,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "shift_left_dynamic": {
                "entryPoint": 1236,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "shift_right_unsigned_dynamic": {
                "entryPoint": 1590,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "storage_set_to_zero_t_uint256": {
                "entryPoint": 1443,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "update_byte_slice_dynamic32": {
                "entryPoint": 1249,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 1
              },
              "update_storage_value_t_uint256_to_t_uint256": {
                "entryPoint": 1395,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "validator_revert_t_uint256": {
                "entryPoint": 942,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "zero_value_for_split_t_uint256": {
                "entryPoint": 1438,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 1
              }
            },
            "generatedSources": [
              {
                "ast": {
                  "nodeType": "YulBlock",
                  "src": "0:7961:6",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "47:35:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "57:19:6",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "73:2:6",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "67:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "67:9:6"
                            },
                            "variableNames": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "57:6:6"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "allocate_unbounded",
                      "nodeType": "YulFunctionDefinition",
                      "returnVariables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "40:6:6",
                          "type": ""
                        }
                      ],
                      "src": "7:75:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "177:28:6",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "194:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "197:1:6",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "187:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "187:12:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "187:12:6"
                          }
                        ]
                      },
                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                      "nodeType": "YulFunctionDefinition",
                      "src": "88:117:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "300:28:6",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "317:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "320:1:6",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "310:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "310:12:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "310:12:6"
                          }
                        ]
                      },
                      "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                      "nodeType": "YulFunctionDefinition",
                      "src": "211:117:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "379:32:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "389:16:6",
                            "value": {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "400:5:6"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nodeType": "YulIdentifier",
                                "src": "389:7:6"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "361:5:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nodeType": "YulTypedName",
                          "src": "371:7:6",
                          "type": ""
                        }
                      ],
                      "src": "334:77:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "460:79:6",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "517:16:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "526:1:6",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "529:1:6",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "519:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "519:12:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "519:12:6"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "483:5:6"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "508:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_uint256",
                                        "nodeType": "YulIdentifier",
                                        "src": "490:17:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "490:24:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "eq",
                                    "nodeType": "YulIdentifier",
                                    "src": "480:2:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "480:35:6"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "473:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "473:43:6"
                            },
                            "nodeType": "YulIf",
                            "src": "470:63:6"
                          }
                        ]
                      },
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "453:5:6",
                          "type": ""
                        }
                      ],
                      "src": "417:122:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "608:80:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "618:22:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "633:6:6"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "627:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "627:13:6"
                            },
                            "variableNames": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "618:5:6"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "676:5:6"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "649:26:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "649:33:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "649:33:6"
                          }
                        ]
                      },
                      "name": "abi_decode_t_uint256_fromMemory",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "586:6:6",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nodeType": "YulTypedName",
                          "src": "594:3:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "602:5:6",
                          "type": ""
                        }
                      ],
                      "src": "545:143:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "771:274:6",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "817:83:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nodeType": "YulIdentifier",
                                      "src": "819:77:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "819:79:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "819:79:6"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "792:7:6"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "801:9:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "788:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "788:23:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "813:2:6",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nodeType": "YulIdentifier",
                                "src": "784:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "784:32:6"
                            },
                            "nodeType": "YulIf",
                            "src": "781:119:6"
                          },
                          {
                            "nodeType": "YulBlock",
                            "src": "910:128:6",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "925:15:6",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "939:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulTypedName",
                                    "src": "929:6:6",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "954:74:6",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "1000:9:6"
                                        },
                                        {
                                          "name": "offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "1011:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "996:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "996:22:6"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nodeType": "YulIdentifier",
                                      "src": "1020:7:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_uint256_fromMemory",
                                    "nodeType": "YulIdentifier",
                                    "src": "964:31:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "964:64:6"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "954:6:6"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_uint256_fromMemory",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "741:9:6",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nodeType": "YulTypedName",
                          "src": "752:7:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "764:6:6",
                          "type": ""
                        }
                      ],
                      "src": "694:351:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1110:40:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "1121:22:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1137:5:6"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1131:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1131:12:6"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1121:6:6"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "1093:5:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "1103:6:6",
                          "type": ""
                        }
                      ],
                      "src": "1051:99:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1184:152:6",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1201:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1204:77:6",
                                  "type": "",
                                  "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1194:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1194:88:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1194:88:6"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1298:1:6",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1301:4:6",
                                  "type": "",
                                  "value": "0x41"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1291:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1291:15:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1291:15:6"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1322:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1325:4:6",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1315:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1315:15:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1315:15:6"
                          }
                        ]
                      },
                      "name": "panic_error_0x41",
                      "nodeType": "YulFunctionDefinition",
                      "src": "1156:180:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1370:152:6",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1387:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1390:77:6",
                                  "type": "",
                                  "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1380:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1380:88:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1380:88:6"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1484:1:6",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1487:4:6",
                                  "type": "",
                                  "value": "0x22"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1477:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1477:15:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1477:15:6"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1508:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1511:4:6",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1501:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1501:15:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1501:15:6"
                          }
                        ]
                      },
                      "name": "panic_error_0x22",
                      "nodeType": "YulFunctionDefinition",
                      "src": "1342:180:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1579:269:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "1589:22:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "1603:4:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1609:1:6",
                                  "type": "",
                                  "value": "2"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "1599:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1599:12:6"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1589:6:6"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1620:38:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "1650:4:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1656:1:6",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "1646:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1646:12:6"
                            },
                            "variables": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulTypedName",
                                "src": "1624:18:6",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1697:51:6",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1711:27:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1725:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1733:4:6",
                                        "type": "",
                                        "value": "0x7f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1721:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1721:17:6"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "1711:6:6"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulIdentifier",
                                  "src": "1677:18:6"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "1670:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1670:26:6"
                            },
                            "nodeType": "YulIf",
                            "src": "1667:81:6"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1800:42:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x22",
                                      "nodeType": "YulIdentifier",
                                      "src": "1814:16:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1814:18:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1814:18:6"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulIdentifier",
                                  "src": "1764:18:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "1787:6:6"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1795:2:6",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nodeType": "YulIdentifier",
                                    "src": "1784:2:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1784:14:6"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "1761:2:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1761:38:6"
                            },
                            "nodeType": "YulIf",
                            "src": "1758:84:6"
                          }
                        ]
                      },
                      "name": "extract_byte_array_length",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "data",
                          "nodeType": "YulTypedName",
                          "src": "1563:4:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "1572:6:6",
                          "type": ""
                        }
                      ],
                      "src": "1528:320:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1908:87:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "1918:11:6",
                            "value": {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "1926:3:6"
                            },
                            "variableNames": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "1918:4:6"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1946:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "name": "ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1949:3:6"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1939:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1939:14:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1939:14:6"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1962:26:6",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1980:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1983:4:6",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "keccak256",
                                "nodeType": "YulIdentifier",
                                "src": "1970:9:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1970:18:6"
                            },
                            "variableNames": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "1962:4:6"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_dataslot_t_string_storage",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "ptr",
                          "nodeType": "YulTypedName",
                          "src": "1895:3:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "data",
                          "nodeType": "YulTypedName",
                          "src": "1903:4:6",
                          "type": ""
                        }
                      ],
                      "src": "1854:141:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2045:49:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2055:33:6",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "2073:5:6"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2080:2:6",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2069:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2069:14:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2085:2:6",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "2065:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2065:23:6"
                            },
                            "variableNames": [
                              {
                                "name": "result",
                                "nodeType": "YulIdentifier",
                                "src": "2055:6:6"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "divide_by_32_ceil",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "2028:5:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "result",
                          "nodeType": "YulTypedName",
                          "src": "2038:6:6",
                          "type": ""
                        }
                      ],
                      "src": "2001:93:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2153:54:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2163:37:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "bits",
                                  "nodeType": "YulIdentifier",
                                  "src": "2188:4:6"
                                },
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2194:5:6"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2184:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2184:16:6"
                            },
                            "variableNames": [
                              {
                                "name": "newValue",
                                "nodeType": "YulIdentifier",
                                "src": "2163:8:6"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "shift_left_dynamic",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "bits",
                          "nodeType": "YulTypedName",
                          "src": "2128:4:6",
                          "type": ""
                        },
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "2134:5:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "newValue",
                          "nodeType": "YulTypedName",
                          "src": "2144:8:6",
                          "type": ""
                        }
                      ],
                      "src": "2100:107:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2289:317:6",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2299:35:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "shiftBytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "2320:10:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2332:1:6",
                                  "type": "",
                                  "value": "8"
                                }
                              ],
                              "functionName": {
                                "name": "mul",
                                "nodeType": "YulIdentifier",
                                "src": "2316:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2316:18:6"
                            },
                            "variables": [
                              {
                                "name": "shiftBits",
                                "nodeType": "YulTypedName",
                                "src": "2303:9:6",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2343:109:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "shiftBits",
                                  "nodeType": "YulIdentifier",
                                  "src": "2374:9:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2385:66:6",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "shift_left_dynamic",
                                "nodeType": "YulIdentifier",
                                "src": "2355:18:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2355:97:6"
                            },
                            "variables": [
                              {
                                "name": "mask",
                                "nodeType": "YulTypedName",
                                "src": "2347:4:6",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "2461:51:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "shiftBits",
                                  "nodeType": "YulIdentifier",
                                  "src": "2492:9:6"
                                },
                                {
                                  "name": "toInsert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2503:8:6"
                                }
                              ],
                              "functionName": {
                                "name": "shift_left_dynamic",
                                "nodeType": "YulIdentifier",
                                "src": "2473:18:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2473:39:6"
                            },
                            "variableNames": [
                              {
                                "name": "toInsert",
                                "nodeType": "YulIdentifier",
                                "src": "2461:8:6"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "2521:30:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2534:5:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "mask",
                                      "nodeType": "YulIdentifier",
                                      "src": "2545:4:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "2541:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2541:9:6"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "2530:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2530:21:6"
                            },
                            "variableNames": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2521:5:6"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "2560:40:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2573:5:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "toInsert",
                                      "nodeType": "YulIdentifier",
                                      "src": "2584:8:6"
                                    },
                                    {
                                      "name": "mask",
                                      "nodeType": "YulIdentifier",
                                      "src": "2594:4:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "2580:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2580:19:6"
                                }
                              ],
                              "functionName": {
                                "name": "or",
                                "nodeType": "YulIdentifier",
                                "src": "2570:2:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2570:30:6"
                            },
                            "variableNames": [
                              {
                                "name": "result",
                                "nodeType": "YulIdentifier",
                                "src": "2560:6:6"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "update_byte_slice_dynamic32",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "2250:5:6",
                          "type": ""
                        },
                        {
                          "name": "shiftBytes",
                          "nodeType": "YulTypedName",
                          "src": "2257:10:6",
                          "type": ""
                        },
                        {
                          "name": "toInsert",
                          "nodeType": "YulTypedName",
                          "src": "2269:8:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "result",
                          "nodeType": "YulTypedName",
                          "src": "2282:6:6",
                          "type": ""
                        }
                      ],
                      "src": "2213:393:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2644:28:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2654:12:6",
                            "value": {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2661:5:6"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "2654:3:6"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "identity",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "2630:5:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "ret",
                          "nodeType": "YulTypedName",
                          "src": "2640:3:6",
                          "type": ""
                        }
                      ],
                      "src": "2612:60:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2738:82:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2748:66:6",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "2806:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_uint256",
                                        "nodeType": "YulIdentifier",
                                        "src": "2788:17:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2788:24:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "identity",
                                    "nodeType": "YulIdentifier",
                                    "src": "2779:8:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2779:34:6"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "2761:17:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2761:53:6"
                            },
                            "variableNames": [
                              {
                                "name": "converted",
                                "nodeType": "YulIdentifier",
                                "src": "2748:9:6"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "convert_t_uint256_to_t_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "2718:5:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "converted",
                          "nodeType": "YulTypedName",
                          "src": "2728:9:6",
                          "type": ""
                        }
                      ],
                      "src": "2678:142:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2873:28:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2883:12:6",
                            "value": {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2890:5:6"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "2883:3:6"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "prepare_store_t_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "2859:5:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "ret",
                          "nodeType": "YulTypedName",
                          "src": "2869:3:6",
                          "type": ""
                        }
                      ],
                      "src": "2826:75:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2983:193:6",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2993:63:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value_0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3048:7:6"
                                }
                              ],
                              "functionName": {
                                "name": "convert_t_uint256_to_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "3017:30:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3017:39:6"
                            },
                            "variables": [
                              {
                                "name": "convertedValue_0",
                                "nodeType": "YulTypedName",
                                "src": "2997:16:6",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "3072:4:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "slot",
                                          "nodeType": "YulIdentifier",
                                          "src": "3112:4:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sload",
                                        "nodeType": "YulIdentifier",
                                        "src": "3106:5:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3106:11:6"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "3119:6:6"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "convertedValue_0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3151:16:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "prepare_store_t_uint256",
                                        "nodeType": "YulIdentifier",
                                        "src": "3127:23:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3127:41:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "update_byte_slice_dynamic32",
                                    "nodeType": "YulIdentifier",
                                    "src": "3078:27:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3078:91:6"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "3065:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3065:105:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3065:105:6"
                          }
                        ]
                      },
                      "name": "update_storage_value_t_uint256_to_t_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "slot",
                          "nodeType": "YulTypedName",
                          "src": "2960:4:6",
                          "type": ""
                        },
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2966:6:6",
                          "type": ""
                        },
                        {
                          "name": "value_0",
                          "nodeType": "YulTypedName",
                          "src": "2974:7:6",
                          "type": ""
                        }
                      ],
                      "src": "2907:269:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3231:24:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "3241:8:6",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3248:1:6",
                              "type": "",
                              "value": "0"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "3241:3:6"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "zero_value_for_split_t_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "returnVariables": [
                        {
                          "name": "ret",
                          "nodeType": "YulTypedName",
                          "src": "3227:3:6",
                          "type": ""
                        }
                      ],
                      "src": "3182:73:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3314:136:6",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "3324:46:6",
                            "value": {
                              "arguments": [],
                              "functionName": {
                                "name": "zero_value_for_split_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "3338:30:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3338:32:6"
                            },
                            "variables": [
                              {
                                "name": "zero_0",
                                "nodeType": "YulTypedName",
                                "src": "3328:6:6",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "3423:4:6"
                                },
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "3429:6:6"
                                },
                                {
                                  "name": "zero_0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3437:6:6"
                                }
                              ],
                              "functionName": {
                                "name": "update_storage_value_t_uint256_to_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "3379:43:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3379:65:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3379:65:6"
                          }
                        ]
                      },
                      "name": "storage_set_to_zero_t_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "slot",
                          "nodeType": "YulTypedName",
                          "src": "3300:4:6",
                          "type": ""
                        },
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3306:6:6",
                          "type": ""
                        }
                      ],
                      "src": "3261:189:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3506:136:6",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3573:63:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "start",
                                        "nodeType": "YulIdentifier",
                                        "src": "3617:5:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3624:1:6",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "storage_set_to_zero_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3587:29:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3587:39:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3587:39:6"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "start",
                                  "nodeType": "YulIdentifier",
                                  "src": "3526:5:6"
                                },
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "3533:3:6"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "3523:2:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3523:14:6"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "3538:26:6",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3540:22:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "start",
                                        "nodeType": "YulIdentifier",
                                        "src": "3553:5:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3560:1:6",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3549:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3549:13:6"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "start",
                                      "nodeType": "YulIdentifier",
                                      "src": "3540:5:6"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "3520:2:6",
                              "statements": []
                            },
                            "src": "3516:120:6"
                          }
                        ]
                      },
                      "name": "clear_storage_range_t_bytes1",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "start",
                          "nodeType": "YulTypedName",
                          "src": "3494:5:6",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nodeType": "YulTypedName",
                          "src": "3501:3:6",
                          "type": ""
                        }
                      ],
                      "src": "3456:186:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3727:464:6",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3753:431:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3767:54:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "array",
                                        "nodeType": "YulIdentifier",
                                        "src": "3815:5:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_dataslot_t_string_storage",
                                      "nodeType": "YulIdentifier",
                                      "src": "3783:31:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3783:38:6"
                                  },
                                  "variables": [
                                    {
                                      "name": "dataArea",
                                      "nodeType": "YulTypedName",
                                      "src": "3771:8:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3834:63:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dataArea",
                                        "nodeType": "YulIdentifier",
                                        "src": "3857:8:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "startIndex",
                                            "nodeType": "YulIdentifier",
                                            "src": "3885:10:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "divide_by_32_ceil",
                                          "nodeType": "YulIdentifier",
                                          "src": "3867:17:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3867:29:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3853:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3853:44:6"
                                  },
                                  "variables": [
                                    {
                                      "name": "deleteStart",
                                      "nodeType": "YulTypedName",
                                      "src": "3838:11:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "4054:27:6",
                                    "statements": [
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "4056:23:6",
                                        "value": {
                                          "name": "dataArea",
                                          "nodeType": "YulIdentifier",
                                          "src": "4071:8:6"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "deleteStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4056:11:6"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "startIndex",
                                        "nodeType": "YulIdentifier",
                                        "src": "4038:10:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4050:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "4035:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4035:18:6"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "4032:49:6"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "deleteStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4123:11:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataArea",
                                            "nodeType": "YulIdentifier",
                                            "src": "4140:8:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "len",
                                                "nodeType": "YulIdentifier",
                                                "src": "4168:3:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "divide_by_32_ceil",
                                              "nodeType": "YulIdentifier",
                                              "src": "4150:17:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4150:22:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4136:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4136:37:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "clear_storage_range_t_bytes1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4094:28:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4094:80:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4094:80:6"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "len",
                                  "nodeType": "YulIdentifier",
                                  "src": "3744:3:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3749:2:6",
                                  "type": "",
                                  "value": "31"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "3741:2:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3741:11:6"
                            },
                            "nodeType": "YulIf",
                            "src": "3738:446:6"
                          }
                        ]
                      },
                      "name": "clean_up_bytearray_end_slots_t_string_storage",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "array",
                          "nodeType": "YulTypedName",
                          "src": "3703:5:6",
                          "type": ""
                        },
                        {
                          "name": "len",
                          "nodeType": "YulTypedName",
                          "src": "3710:3:6",
                          "type": ""
                        },
                        {
                          "name": "startIndex",
                          "nodeType": "YulTypedName",
                          "src": "3715:10:6",
                          "type": ""
                        }
                      ],
                      "src": "3648:543:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4260:54:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "4270:37:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "bits",
                                  "nodeType": "YulIdentifier",
                                  "src": "4295:4:6"
                                },
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "4301:5:6"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "4291:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4291:16:6"
                            },
                            "variableNames": [
                              {
                                "name": "newValue",
                                "nodeType": "YulIdentifier",
                                "src": "4270:8:6"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "shift_right_unsigned_dynamic",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "bits",
                          "nodeType": "YulTypedName",
                          "src": "4235:4:6",
                          "type": ""
                        },
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "4241:5:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "newValue",
                          "nodeType": "YulTypedName",
                          "src": "4251:8:6",
                          "type": ""
                        }
                      ],
                      "src": "4197:117:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4371:118:6",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4381:68:6",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4430:1:6",
                                          "type": "",
                                          "value": "8"
                                        },
                                        {
                                          "name": "bytes",
                                          "nodeType": "YulIdentifier",
                                          "src": "4433:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nodeType": "YulIdentifier",
                                        "src": "4426:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4426:13:6"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4445:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "4441:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4441:6:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shift_right_unsigned_dynamic",
                                    "nodeType": "YulIdentifier",
                                    "src": "4397:28:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4397:51:6"
                                }
                              ],
                              "functionName": {
                                "name": "not",
                                "nodeType": "YulIdentifier",
                                "src": "4393:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4393:56:6"
                            },
                            "variables": [
                              {
                                "name": "mask",
                                "nodeType": "YulTypedName",
                                "src": "4385:4:6",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "4458:25:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "4472:4:6"
                                },
                                {
                                  "name": "mask",
                                  "nodeType": "YulIdentifier",
                                  "src": "4478:4:6"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4468:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4468:15:6"
                            },
                            "variableNames": [
                              {
                                "name": "result",
                                "nodeType": "YulIdentifier",
                                "src": "4458:6:6"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "mask_bytes_dynamic",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "data",
                          "nodeType": "YulTypedName",
                          "src": "4348:4:6",
                          "type": ""
                        },
                        {
                          "name": "bytes",
                          "nodeType": "YulTypedName",
                          "src": "4354:5:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "result",
                          "nodeType": "YulTypedName",
                          "src": "4364:6:6",
                          "type": ""
                        }
                      ],
                      "src": "4320:169:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4575:214:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "4708:37:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "4735:4:6"
                                },
                                {
                                  "name": "len",
                                  "nodeType": "YulIdentifier",
                                  "src": "4741:3:6"
                                }
                              ],
                              "functionName": {
                                "name": "mask_bytes_dynamic",
                                "nodeType": "YulIdentifier",
                                "src": "4716:18:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4716:29:6"
                            },
                            "variableNames": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "4708:4:6"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "4754:29:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "4765:4:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4775:1:6",
                                      "type": "",
                                      "value": "2"
                                    },
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "4778:3:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mul",
                                    "nodeType": "YulIdentifier",
                                    "src": "4771:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4771:11:6"
                                }
                              ],
                              "functionName": {
                                "name": "or",
                                "nodeType": "YulIdentifier",
                                "src": "4762:2:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4762:21:6"
                            },
                            "variableNames": [
                              {
                                "name": "used",
                                "nodeType": "YulIdentifier",
                                "src": "4754:4:6"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "extract_used_part_and_set_length_of_short_byte_array",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "data",
                          "nodeType": "YulTypedName",
                          "src": "4556:4:6",
                          "type": ""
                        },
                        {
                          "name": "len",
                          "nodeType": "YulTypedName",
                          "src": "4562:3:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "used",
                          "nodeType": "YulTypedName",
                          "src": "4570:4:6",
                          "type": ""
                        }
                      ],
                      "src": "4494:295:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4886:1303:6",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4897:51:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "4944:3:6"
                                }
                              ],
                              "functionName": {
                                "name": "array_length_t_string_memory_ptr",
                                "nodeType": "YulIdentifier",
                                "src": "4911:32:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4911:37:6"
                            },
                            "variables": [
                              {
                                "name": "newLen",
                                "nodeType": "YulTypedName",
                                "src": "4901:6:6",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "5033:22:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x41",
                                      "nodeType": "YulIdentifier",
                                      "src": "5035:16:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5035:18:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5035:18:6"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "5005:6:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5013:18:6",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "5002:2:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5002:30:6"
                            },
                            "nodeType": "YulIf",
                            "src": "4999:56:6"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5065:52:6",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "slot",
                                      "nodeType": "YulIdentifier",
                                      "src": "5111:4:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sload",
                                    "nodeType": "YulIdentifier",
                                    "src": "5105:5:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5105:11:6"
                                }
                              ],
                              "functionName": {
                                "name": "extract_byte_array_length",
                                "nodeType": "YulIdentifier",
                                "src": "5079:25:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5079:38:6"
                            },
                            "variables": [
                              {
                                "name": "oldLen",
                                "nodeType": "YulTypedName",
                                "src": "5069:6:6",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "5210:4:6"
                                },
                                {
                                  "name": "oldLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "5216:6:6"
                                },
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "5224:6:6"
                                }
                              ],
                              "functionName": {
                                "name": "clean_up_bytearray_end_slots_t_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "5164:45:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5164:67:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5164:67:6"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "5241:18:6",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5258:1:6",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "srcOffset",
                                "nodeType": "YulTypedName",
                                "src": "5245:9:6",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "5269:17:6",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5282:4:6",
                              "type": "",
                              "value": "0x20"
                            },
                            "variableNames": [
                              {
                                "name": "srcOffset",
                                "nodeType": "YulIdentifier",
                                "src": "5269:9:6"
                              }
                            ]
                          },
                          {
                            "cases": [
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "5333:611:6",
                                  "statements": [
                                    {
                                      "nodeType": "YulVariableDeclaration",
                                      "src": "5347:37:6",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "newLen",
                                            "nodeType": "YulIdentifier",
                                            "src": "5366:6:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5378:4:6",
                                                "type": "",
                                                "value": "0x1f"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "5374:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5374:9:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "5362:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5362:22:6"
                                      },
                                      "variables": [
                                        {
                                          "name": "loopEnd",
                                          "nodeType": "YulTypedName",
                                          "src": "5351:7:6",
                                          "type": ""
                                        }
                                      ]
                                    },
                                    {
                                      "nodeType": "YulVariableDeclaration",
                                      "src": "5398:51:6",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nodeType": "YulIdentifier",
                                            "src": "5444:4:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "array_dataslot_t_string_storage",
                                          "nodeType": "YulIdentifier",
                                          "src": "5412:31:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5412:37:6"
                                      },
                                      "variables": [
                                        {
                                          "name": "dstPtr",
                                          "nodeType": "YulTypedName",
                                          "src": "5402:6:6",
                                          "type": ""
                                        }
                                      ]
                                    },
                                    {
                                      "nodeType": "YulVariableDeclaration",
                                      "src": "5462:10:6",
                                      "value": {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5471:1:6",
                                        "type": "",
                                        "value": "0"
                                      },
                                      "variables": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulTypedName",
                                          "src": "5466:1:6",
                                          "type": ""
                                        }
                                      ]
                                    },
                                    {
                                      "body": {
                                        "nodeType": "YulBlock",
                                        "src": "5530:163:6",
                                        "statements": [
                                          {
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "name": "dstPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5555:6:6"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "src",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "5573:3:6"
                                                        },
                                                        {
                                                          "name": "srcOffset",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "5578:9:6"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "5569:3:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "5569:19:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mload",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5563:5:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "5563:26:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sstore",
                                                "nodeType": "YulIdentifier",
                                                "src": "5548:6:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "5548:42:6"
                                            },
                                            "nodeType": "YulExpressionStatement",
                                            "src": "5548:42:6"
                                          },
                                          {
                                            "nodeType": "YulAssignment",
                                            "src": "5607:24:6",
                                            "value": {
                                              "arguments": [
                                                {
                                                  "name": "dstPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5621:6:6"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "5629:1:6",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "5617:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "5617:14:6"
                                            },
                                            "variableNames": [
                                              {
                                                "name": "dstPtr",
                                                "nodeType": "YulIdentifier",
                                                "src": "5607:6:6"
                                              }
                                            ]
                                          },
                                          {
                                            "nodeType": "YulAssignment",
                                            "src": "5648:31:6",
                                            "value": {
                                              "arguments": [
                                                {
                                                  "name": "srcOffset",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5665:9:6"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "5676:2:6",
                                                  "type": "",
                                                  "value": "32"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "5661:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "5661:18:6"
                                            },
                                            "variableNames": [
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "5648:9:6"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "condition": {
                                        "arguments": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "5496:1:6"
                                          },
                                          {
                                            "name": "loopEnd",
                                            "nodeType": "YulIdentifier",
                                            "src": "5499:7:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "5493:2:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5493:14:6"
                                      },
                                      "nodeType": "YulForLoop",
                                      "post": {
                                        "nodeType": "YulBlock",
                                        "src": "5508:21:6",
                                        "statements": [
                                          {
                                            "nodeType": "YulAssignment",
                                            "src": "5510:17:6",
                                            "value": {
                                              "arguments": [
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5519:1:6"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "5522:4:6",
                                                  "type": "",
                                                  "value": "0x20"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "5515:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "5515:12:6"
                                            },
                                            "variableNames": [
                                              {
                                                "name": "i",
                                                "nodeType": "YulIdentifier",
                                                "src": "5510:1:6"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "pre": {
                                        "nodeType": "YulBlock",
                                        "src": "5489:3:6",
                                        "statements": []
                                      },
                                      "src": "5485:208:6"
                                    },
                                    {
                                      "body": {
                                        "nodeType": "YulBlock",
                                        "src": "5729:156:6",
                                        "statements": [
                                          {
                                            "nodeType": "YulVariableDeclaration",
                                            "src": "5747:43:6",
                                            "value": {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "src",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5774:3:6"
                                                    },
                                                    {
                                                      "name": "srcOffset",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5779:9:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5770:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "5770:19:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nodeType": "YulIdentifier",
                                                "src": "5764:5:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "5764:26:6"
                                            },
                                            "variables": [
                                              {
                                                "name": "lastValue",
                                                "nodeType": "YulTypedName",
                                                "src": "5751:9:6",
                                                "type": ""
                                              }
                                            ]
                                          },
                                          {
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "name": "dstPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5814:6:6"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "lastValue",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5841:9:6"
                                                    },
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "newLen",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "5856:6:6"
                                                        },
                                                        {
                                                          "kind": "number",
                                                          "nodeType": "YulLiteral",
                                                          "src": "5864:4:6",
                                                          "type": "",
                                                          "value": "0x1f"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "and",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "5852:3:6"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "5852:17:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mask_bytes_dynamic",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5822:18:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "5822:48:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sstore",
                                                "nodeType": "YulIdentifier",
                                                "src": "5807:6:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "5807:64:6"
                                            },
                                            "nodeType": "YulExpressionStatement",
                                            "src": "5807:64:6"
                                          }
                                        ]
                                      },
                                      "condition": {
                                        "arguments": [
                                          {
                                            "name": "loopEnd",
                                            "nodeType": "YulIdentifier",
                                            "src": "5712:7:6"
                                          },
                                          {
                                            "name": "newLen",
                                            "nodeType": "YulIdentifier",
                                            "src": "5721:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "5709:2:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5709:19:6"
                                      },
                                      "nodeType": "YulIf",
                                      "src": "5706:179:6"
                                    },
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nodeType": "YulIdentifier",
                                            "src": "5905:4:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "newLen",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5919:6:6"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "5927:1:6",
                                                    "type": "",
                                                    "value": "2"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mul",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5915:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "5915:14:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5931:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "5911:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5911:22:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sstore",
                                          "nodeType": "YulIdentifier",
                                          "src": "5898:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5898:36:6"
                                      },
                                      "nodeType": "YulExpressionStatement",
                                      "src": "5898:36:6"
                                    }
                                  ]
                                },
                                "nodeType": "YulCase",
                                "src": "5326:618:6",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5331:1:6",
                                  "type": "",
                                  "value": "1"
                                }
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "5961:222:6",
                                  "statements": [
                                    {
                                      "nodeType": "YulVariableDeclaration",
                                      "src": "5975:14:6",
                                      "value": {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5988:1:6",
                                        "type": "",
                                        "value": "0"
                                      },
                                      "variables": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulTypedName",
                                          "src": "5979:5:6",
                                          "type": ""
                                        }
                                      ]
                                    },
                                    {
                                      "body": {
                                        "nodeType": "YulBlock",
                                        "src": "6012:67:6",
                                        "statements": [
                                          {
                                            "nodeType": "YulAssignment",
                                            "src": "6030:35:6",
                                            "value": {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "src",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "6049:3:6"
                                                    },
                                                    {
                                                      "name": "srcOffset",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "6054:9:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "6045:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "6045:19:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nodeType": "YulIdentifier",
                                                "src": "6039:5:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "6039:26:6"
                                            },
                                            "variableNames": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "6030:5:6"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "condition": {
                                        "name": "newLen",
                                        "nodeType": "YulIdentifier",
                                        "src": "6005:6:6"
                                      },
                                      "nodeType": "YulIf",
                                      "src": "6002:77:6"
                                    },
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nodeType": "YulIdentifier",
                                            "src": "6099:4:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "6158:5:6"
                                              },
                                              {
                                                "name": "newLen",
                                                "nodeType": "YulIdentifier",
                                                "src": "6165:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "extract_used_part_and_set_length_of_short_byte_array",
                                              "nodeType": "YulIdentifier",
                                              "src": "6105:52:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6105:67:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sstore",
                                          "nodeType": "YulIdentifier",
                                          "src": "6092:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6092:81:6"
                                      },
                                      "nodeType": "YulExpressionStatement",
                                      "src": "6092:81:6"
                                    }
                                  ]
                                },
                                "nodeType": "YulCase",
                                "src": "5953:230:6",
                                "value": "default"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "5306:6:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5314:2:6",
                                  "type": "",
                                  "value": "31"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "5303:2:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5303:14:6"
                            },
                            "nodeType": "YulSwitch",
                            "src": "5296:887:6"
                          }
                        ]
                      },
                      "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "slot",
                          "nodeType": "YulTypedName",
                          "src": "4875:4:6",
                          "type": ""
                        },
                        {
                          "name": "src",
                          "nodeType": "YulTypedName",
                          "src": "4881:3:6",
                          "type": ""
                        }
                      ],
                      "src": "4794:1395:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6240:81:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "6250:65:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "6265:5:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6272:42:6",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "6261:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6261:54:6"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nodeType": "YulIdentifier",
                                "src": "6250:7:6"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "6222:5:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nodeType": "YulTypedName",
                          "src": "6232:7:6",
                          "type": ""
                        }
                      ],
                      "src": "6195:126:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6372:51:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "6382:35:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "6411:5:6"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint160",
                                "nodeType": "YulIdentifier",
                                "src": "6393:17:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6393:24:6"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nodeType": "YulIdentifier",
                                "src": "6382:7:6"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_address",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "6354:5:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nodeType": "YulTypedName",
                          "src": "6364:7:6",
                          "type": ""
                        }
                      ],
                      "src": "6327:96:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6494:53:6",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6511:3:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "6534:5:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_address",
                                    "nodeType": "YulIdentifier",
                                    "src": "6516:17:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6516:24:6"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6504:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6504:37:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6504:37:6"
                          }
                        ]
                      },
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "6482:5:6",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nodeType": "YulTypedName",
                          "src": "6489:3:6",
                          "type": ""
                        }
                      ],
                      "src": "6429:118:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6651:124:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "6661:26:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "6673:9:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6684:2:6",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6669:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6669:18:6"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "6661:4:6"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "6741:6:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "6754:9:6"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6765:1:6",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6750:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6750:17:6"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_fromStack",
                                "nodeType": "YulIdentifier",
                                "src": "6697:43:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6697:71:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6697:71:6"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "6623:9:6",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "6635:6:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "6646:4:6",
                          "type": ""
                        }
                      ],
                      "src": "6553:222:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6809:152:6",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6826:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6829:77:6",
                                  "type": "",
                                  "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6819:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6819:88:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6819:88:6"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6923:1:6",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6926:4:6",
                                  "type": "",
                                  "value": "0x11"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6916:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6916:15:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6916:15:6"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6947:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6950:4:6",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6940:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6940:15:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6940:15:6"
                          }
                        ]
                      },
                      "name": "panic_error_0x11",
                      "nodeType": "YulFunctionDefinition",
                      "src": "6781:180:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7011:147:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "7021:25:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "7044:1:6"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "7026:17:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7026:20:6"
                            },
                            "variableNames": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7021:1:6"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "7055:25:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "7078:1:6"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "7060:17:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7060:20:6"
                            },
                            "variableNames": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "7055:1:6"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "7089:16:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "7100:1:6"
                                },
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "7103:1:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7096:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7096:9:6"
                            },
                            "variableNames": [
                              {
                                "name": "sum",
                                "nodeType": "YulIdentifier",
                                "src": "7089:3:6"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "7129:22:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "7131:16:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7131:18:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7131:18:6"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "7121:1:6"
                                },
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "7124:3:6"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "7118:2:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7118:10:6"
                            },
                            "nodeType": "YulIf",
                            "src": "7115:36:6"
                          }
                        ]
                      },
                      "name": "checked_add_t_uint256",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "x",
                          "nodeType": "YulTypedName",
                          "src": "6998:1:6",
                          "type": ""
                        },
                        {
                          "name": "y",
                          "nodeType": "YulTypedName",
                          "src": "7001:1:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "sum",
                          "nodeType": "YulTypedName",
                          "src": "7007:3:6",
                          "type": ""
                        }
                      ],
                      "src": "6967:191:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7229:53:6",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7246:3:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "7269:5:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_uint256",
                                    "nodeType": "YulIdentifier",
                                    "src": "7251:17:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7251:24:6"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7239:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7239:37:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7239:37:6"
                          }
                        ]
                      },
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "7217:5:6",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nodeType": "YulTypedName",
                          "src": "7224:3:6",
                          "type": ""
                        }
                      ],
                      "src": "7164:118:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7442:288:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "7452:26:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "7464:9:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7475:2:6",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7460:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7460:18:6"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "7452:4:6"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "7532:6:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "7545:9:6"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7556:1:6",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7541:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7541:17:6"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_fromStack",
                                "nodeType": "YulIdentifier",
                                "src": "7488:43:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7488:71:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7488:71:6"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "7613:6:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "7626:9:6"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7637:2:6",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7622:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7622:18:6"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nodeType": "YulIdentifier",
                                "src": "7569:43:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7569:72:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7569:72:6"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "7695:6:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "7708:9:6"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7719:2:6",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7704:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7704:18:6"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nodeType": "YulIdentifier",
                                "src": "7651:43:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7651:72:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7651:72:6"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "7398:9:6",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nodeType": "YulTypedName",
                          "src": "7410:6:6",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nodeType": "YulTypedName",
                          "src": "7418:6:6",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "7426:6:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "7437:4:6",
                          "type": ""
                        }
                      ],
                      "src": "7288:442:6"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7834:124:6",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "7844:26:6",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "7856:9:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7867:2:6",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7852:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7852:18:6"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "7844:4:6"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "7924:6:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "7937:9:6"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7948:1:6",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7933:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7933:17:6"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nodeType": "YulIdentifier",
                                "src": "7880:43:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7880:71:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7880:71:6"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nodeType": "YulTypedName",
                          "src": "7806:9:6",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nodeType": "YulTypedName",
                          "src": "7818:6:6",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nodeType": "YulTypedName",
                          "src": "7829:4:6",
                          "type": ""
                        }
                      ],
                      "src": "7736:222:6"
                    }
                  ]
                },
                "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
                "id": 6,
                "language": "Yul",
                "name": "#utility.yul"
              }
            ],
            "linkReferences": {},
            "object": "60806040523480156200001157600080fd5b5060405162001704380380620017048339818101604052810190620000379190620003df565b6040518060400160405280600b81526020017f53616d706c65546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600281526020017f53540000000000000000000000000000000000000000000000000000000000008152508160039081620000b4919062000681565b508060049081620000c6919062000681565b505050620000db3382620000e260201b60201c565b506200089f565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001575760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200014e9190620007ad565b60405180910390fd5b6200016b600083836200016f60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001c5578060026000828254620001b89190620007f9565b925050819055506200029b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000254578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200024b9392919062000845565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002e6578060026000828254039250508190555062000333565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000392919062000882565b60405180910390a3505050565b600080fd5b6000819050919050565b620003b981620003a4565b8114620003c557600080fd5b50565b600081519050620003d981620003ae565b92915050565b600060208284031215620003f857620003f76200039f565b5b60006200040884828501620003c8565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200049357607f821691505b602082108103620004a957620004a86200044b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004d4565b6200051f8683620004d4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620005626200055c6200055684620003a4565b62000537565b620003a4565b9050919050565b6000819050919050565b6200057e8362000541565b620005966200058d8262000569565b848454620004e1565b825550505050565b600090565b620005ad6200059e565b620005ba81848462000573565b505050565b5b81811015620005e257620005d6600082620005a3565b600181019050620005c0565b5050565b601f8211156200063157620005fb81620004af565b6200060684620004c4565b8101602085101562000616578190505b6200062e6200062585620004c4565b830182620005bf565b50505b505050565b600082821c905092915050565b6000620006566000198460080262000636565b1980831691505092915050565b600062000671838362000643565b9150826002028217905092915050565b6200068c8262000411565b67ffffffffffffffff811115620006a857620006a76200041c565b5b620006b482546200047a565b620006c1828285620005e6565b600060209050601f831160018114620006f95760008415620006e4578287015190505b620006f0858262000663565b86555062000760565b601f1984166200070986620004af565b60005b8281101562000733578489015182556001820191506020850194506020810190506200070c565b868310156200075357848901516200074f601f89168262000643565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007958262000768565b9050919050565b620007a78162000788565b82525050565b6000602082019050620007c460008301846200079c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200080682620003a4565b91506200081383620003a4565b92508282019050808211156200082e576200082d620007ca565b5b92915050565b6200083f81620003a4565b82525050565b60006060820190506200085c60008301866200079c565b6200086b602083018562000834565b6200087a604083018462000834565b949350505050565b600060208201905062000899600083018462000834565b92915050565b610e5580620008af6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610aa9565b60405180910390f35b6100d060048036038101906100cb9190610b64565b610292565b6040516100dd9190610bbf565b60405180910390f35b6100ee6102b5565b6040516100fb9190610be9565b60405180910390f35b61011e60048036038101906101199190610c04565b6102bf565b60405161012b9190610bbf565b60405180910390f35b61013c6102ee565b6040516101499190610c73565b60405180910390f35b61016c60048036038101906101679190610c8e565b6102f7565b6040516101799190610be9565b60405180910390f35b61018a61033f565b6040516101979190610aa9565b60405180910390f35b6101ba60048036038101906101b59190610b64565b6103d1565b6040516101c79190610bbf565b60405180910390f35b6101ea60048036038101906101e59190610cbb565b6103f4565b6040516101f79190610be9565b60405180910390f35b60606003805461020f90610d2a565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610d2a565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b60008061029d61047b565b90506102aa818585610483565b600191505092915050565b6000600254905090565b6000806102ca61047b565b90506102d7858285610495565b6102e2858585610529565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461034e90610d2a565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90610d2a565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000806103dc61047b565b90506103e9818585610529565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b610490838383600161061d565b505050565b60006104a184846103f4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105235781811015610513578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050a93929190610d6a565b60405180910390fd5b6105228484848403600061061d565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059b5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105929190610da1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361060d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106049190610da1565b60405180910390fd5b6106188383836107f4565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361068f5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106869190610da1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107015760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106f89190610da1565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156107ee578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107e59190610be9565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084657806002600082825461083a9190610deb565b92505081905550610919565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156108d2578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108c993929190610d6a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361096257806002600082825403925050819055506109af565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a0c9190610be9565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a53578082015181840152602081019050610a38565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a7b82610a19565b610a858185610a24565b9350610a95818560208601610a35565b610a9e81610a5f565b840191505092915050565b60006020820190508181036000830152610ac38184610a70565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610afb82610ad0565b9050919050565b610b0b81610af0565b8114610b1657600080fd5b50565b600081359050610b2881610b02565b92915050565b6000819050919050565b610b4181610b2e565b8114610b4c57600080fd5b50565b600081359050610b5e81610b38565b92915050565b60008060408385031215610b7b57610b7a610acb565b5b6000610b8985828601610b19565b9250506020610b9a85828601610b4f565b9150509250929050565b60008115159050919050565b610bb981610ba4565b82525050565b6000602082019050610bd46000830184610bb0565b92915050565b610be381610b2e565b82525050565b6000602082019050610bfe6000830184610bda565b92915050565b600080600060608486031215610c1d57610c1c610acb565b5b6000610c2b86828701610b19565b9350506020610c3c86828701610b19565b9250506040610c4d86828701610b4f565b9150509250925092565b600060ff82169050919050565b610c6d81610c57565b82525050565b6000602082019050610c886000830184610c64565b92915050565b600060208284031215610ca457610ca3610acb565b5b6000610cb284828501610b19565b91505092915050565b60008060408385031215610cd257610cd1610acb565b5b6000610ce085828601610b19565b9250506020610cf185828601610b19565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d4257607f821691505b602082108103610d5557610d54610cfb565b5b50919050565b610d6481610af0565b82525050565b6000606082019050610d7f6000830186610d5b565b610d8c6020830185610bda565b610d996040830184610bda565b949350505050565b6000602082019050610db66000830184610d5b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df682610b2e565b9150610e0183610b2e565b9250828201905080821115610e1957610e18610dbc565b5b9291505056fea26469706673582212200ccb539ff51d35cce935ee5a3dd5b51191827b1f22caa9e9492e4ee6bd88d8d764736f6c63430008110033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1704 CODESIZE SUB DUP1 PUSH3 0x1704 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53616D706C65546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0x681 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x681 JUMP JUMPDEST POP POP POP PUSH3 0xDB CALLER DUP3 PUSH3 0xE2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x89F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x157 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x14E SWAP2 SWAP1 PUSH3 0x7AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x16B PUSH1 0x0 DUP4 DUP4 PUSH3 0x16F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1C5 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1B8 SWAP2 SWAP1 PUSH3 0x7F9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x29B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x254 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x24B SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x845 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2E6 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x333 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x392 SWAP2 SWAP1 PUSH3 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3B9 DUP2 PUSH3 0x3A4 JUMP JUMPDEST DUP2 EQ PUSH3 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3D9 DUP2 PUSH3 0x3AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3F8 JUMPI PUSH3 0x3F7 PUSH3 0x39F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x408 DUP5 DUP3 DUP6 ADD PUSH3 0x3C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x493 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4A9 JUMPI PUSH3 0x4A8 PUSH3 0x44B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x513 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4D4 JUMP JUMPDEST PUSH3 0x51F DUP7 DUP4 PUSH3 0x4D4 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x562 PUSH3 0x55C PUSH3 0x556 DUP5 PUSH3 0x3A4 JUMP JUMPDEST PUSH3 0x537 JUMP JUMPDEST PUSH3 0x3A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x57E DUP4 PUSH3 0x541 JUMP JUMPDEST PUSH3 0x596 PUSH3 0x58D DUP3 PUSH3 0x569 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4E1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5AD PUSH3 0x59E JUMP JUMPDEST PUSH3 0x5BA DUP2 DUP5 DUP5 PUSH3 0x573 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5E2 JUMPI PUSH3 0x5D6 PUSH1 0x0 DUP3 PUSH3 0x5A3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x631 JUMPI PUSH3 0x5FB DUP2 PUSH3 0x4AF JUMP JUMPDEST PUSH3 0x606 DUP5 PUSH3 0x4C4 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x616 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x62E PUSH3 0x625 DUP6 PUSH3 0x4C4 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5BF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x656 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x636 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x671 DUP4 DUP4 PUSH3 0x643 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x68C DUP3 PUSH3 0x411 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A8 JUMPI PUSH3 0x6A7 PUSH3 0x41C JUMP JUMPDEST JUMPDEST PUSH3 0x6B4 DUP3 SLOAD PUSH3 0x47A JUMP JUMPDEST PUSH3 0x6C1 DUP3 DUP3 DUP6 PUSH3 0x5E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6F9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6E4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6F0 DUP6 DUP3 PUSH3 0x663 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x760 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x709 DUP7 PUSH3 0x4AF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x733 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x70C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x753 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x74F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x643 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x795 DUP3 PUSH3 0x768 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7A7 DUP2 PUSH3 0x788 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x7C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x79C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x806 DUP3 PUSH3 0x3A4 JUMP JUMPDEST SWAP2 POP PUSH3 0x813 DUP4 PUSH3 0x3A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x82E JUMPI PUSH3 0x82D PUSH3 0x7CA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x83F DUP2 PUSH3 0x3A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x85C PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x79C JUMP JUMPDEST PUSH3 0x86B PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x834 JUMP JUMPDEST PUSH3 0x87A PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x834 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x899 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x834 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE55 DUP1 PUSH3 0x8AF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xC8E JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29D PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA DUP2 DUP6 DUP6 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7 DUP6 DUP3 DUP6 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x2E2 DUP6 DUP6 DUP6 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP2 DUP6 DUP6 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x490 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x61D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP5 DUP5 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x523 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x513 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x522 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x61D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x618 DUP4 DUP4 DUP4 PUSH2 0x7F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x701 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7EE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x846 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83A SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8D2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x962 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9AF JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA0C SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA53 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7B DUP3 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0xA85 DUP2 DUP6 PUSH2 0xA24 JUMP JUMPDEST SWAP4 POP PUSH2 0xA95 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA35 JUMP JUMPDEST PUSH2 0xA9E DUP2 PUSH2 0xA5F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC3 DUP2 DUP5 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFB DUP3 PUSH2 0xAD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0B DUP2 PUSH2 0xAF0 JUMP JUMPDEST DUP2 EQ PUSH2 0xB16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB28 DUP2 PUSH2 0xB02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB41 DUP2 PUSH2 0xB2E JUMP JUMPDEST DUP2 EQ PUSH2 0xB4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5E DUP2 PUSH2 0xB38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7A PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB89 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB9A DUP6 DUP3 DUP7 ADD PUSH2 0xB4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB9 DUP2 PUSH2 0xBA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE3 DUP2 PUSH2 0xB2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1D JUMPI PUSH2 0xC1C PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2B DUP7 DUP3 DUP8 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC3C DUP7 DUP3 DUP8 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC4D DUP7 DUP3 DUP8 ADD PUSH2 0xB4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6D DUP2 PUSH2 0xC57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA4 JUMPI PUSH2 0xCA3 PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB2 DUP5 DUP3 DUP6 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD2 JUMPI PUSH2 0xCD1 PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF1 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD42 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD55 JUMPI PUSH2 0xD54 PUSH2 0xCFB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD64 DUP2 PUSH2 0xAF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD7F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD5B JUMP JUMPDEST PUSH2 0xD8C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0xD99 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF6 DUP3 PUSH2 0xB2E JUMP JUMPDEST SWAP2 POP PUSH2 0xE01 DUP4 PUSH2 0xB2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE19 JUMPI PUSH2 0xE18 PUSH2 0xDBC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xCB MSTORE8 SWAP16 CREATE2 SAR CALLDATALOAD 0xCC 0xE9 CALLDATALOAD 0xEE GAS RETURNDATASIZE 0xD5 0xB5 GT SWAP2 DUP3 PUSH28 0x1F22CAA9E9492E4EE6BD88D8D764736F6C6343000811003300000000 ",
            "sourceMap": "114:149:2:-:0;;;150:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1585:116:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1660:5;1652;:13;;;;;;:::i;:::-;;1686:7;1676;:17;;;;;;:::i;:::-;;1585:116;;222:32:2::1;228:10;240:13;222:5;;;:32;;:::i;:::-;150:111:::0;114:149;;7702:213:1;7792:1;7773:21;;:7;:21;;;7769:93;;7847:1;7818:32;;;;;;;;;;;:::i;:::-;;;;;;;;7769:93;7872:35;7888:1;7892:7;7901:5;7872:7;;;:35;;:::i;:::-;7702:213;;:::o;6214:1135::-;6320:1;6304:18;;:4;:18;;;6300:552;;6458:5;6442:12;;:21;;;;;;;:::i;:::-;;;;;;;;6300:552;;;6496:19;6518:9;:15;6528:4;6518:15;;;;;;;;;;;;;;;;6496:37;;6566:5;6552:11;:19;6548:117;;;6624:4;6630:11;6643:5;6599:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6548:117;6820:5;6806:11;:19;6788:9;:15;6798:4;6788:15;;;;;;;;;;;;;;;:37;;;;6481:371;6300:552;6882:1;6868:16;;:2;:16;;;6864:435;;7050:5;7034:12;;:21;;;;;;;;;;;6864:435;;;7267:5;7250:9;:13;7260:2;7250:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6864:435;7331:2;7316:25;;7325:4;7316:25;;;7335:5;7316:25;;;;;;:::i;:::-;;;;;;;;6214:1135;;;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:126::-;6232:7;6272:42;6265:5;6261:54;6250:65;;6195:126;;;:::o;6327:96::-;6364:7;6393:24;6411:5;6393:24;:::i;:::-;6382:35;;6327:96;;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:191;7007:3;7026:20;7044:1;7026:20;:::i;:::-;7021:25;;7060:20;7078:1;7060:20;:::i;:::-;7055:25;;7103:1;7100;7096:9;7089:16;;7124:3;7121:1;7118:10;7115:36;;;7131:18;;:::i;:::-;7115:36;6967:191;;;;:::o;7164:118::-;7251:24;7269:5;7251:24;:::i;:::-;7246:3;7239:37;7164:118;;:::o;7288:442::-;7437:4;7475:2;7464:9;7460:18;7452:26;;7488:71;7556:1;7545:9;7541:17;7532:6;7488:71;:::i;:::-;7569:72;7637:2;7626:9;7622:18;7613:6;7569:72;:::i;:::-;7651;7719:2;7708:9;7704:18;7695:6;7651:72;:::i;:::-;7288:442;;;;;;:::o;7736:222::-;7829:4;7867:2;7856:9;7852:18;7844:26;;7880:71;7948:1;7937:9;7933:17;7924:6;7880:71;:::i;:::-;7736:222;;;;:::o;114:149:2:-;;;;;;;"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20Sample.sol\":\"ERC20Sample\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x441be1e5187e7717c99b067fc904ec5a1528d8ee4a29d43e58a72fbe6219a218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54d9ad1c0adf5e86827fd19144e848f128c249c7ce9746824f3914ea0d07774\",\"dweb:/ipfs/QmZAS4jAYsQfmYjmHGuheswgQtBNpgrZWnZkUVdhmed6hx\"]},\"ERC20.sol\":{\"keccak256\":\"0x992ed6137996415a4c9d0a41a8a8336e0cf8a6cc569a706788b1a2900a8cf7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a131946b65dfaf7d688d6f19c0ba58adea78f89f9bff64d2258c07fc3375b08b\",\"dweb:/ipfs/QmQzmDpxyE48u64o5HwtyxCu6TeQWxZJk7setCp5iUPzwD\"]},\"ERC20Sample.sol\":{\"keccak256\":\"0x1e70241367032a2332f40e20ad0b282325c96ad50e51bb5067edd36d3c0dfb72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94d8546ec0b5da043141d077ffd8c2934c36f41209ce6fb2642d50587cf66fb5\",\"dweb:/ipfs/QmXeGeEUrH4czTWrWf5D2NYexTicRFZDe8yAzvPYPH8kvc\"]},\"IERC20.sol\":{\"keccak256\":\"0x1c50cffbf03537659fa456fc2f38a9e9c634f0231068b96a5f52a5a9753e2c18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1741708992159b58d58295ad866d8cfa69022d43b440f906a9c6c918bc67ba\",\"dweb:/ipfs/Qme8napvk8oJTcyz2UpeuFHkDQgA8BFm2jic2RfHSByTX8\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xd6d5a0dfff9f1ffab84f5262f7ef5118aa9ff20202f9aed982b13707d8160be5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9c5176297845609eae60061c91661ab1584f3da18c802fbcb67d1a70405b1e3\",\"dweb:/ipfs/QmSaFn1GcDGYeWGETnjSKfRzV2gbAqwBZaqUzWEZQzkRA4\"]},\"draft-IERC6093.sol\":{\"keccak256\":\"0x95ff58432c2912acb75198376b6955d831e362cdc24c96de28b647d2c6177804\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://856f39586337f757fb0ba79c95167fd7b6b901619e594b7a9fb90d20addb8f16\",\"dweb:/ipfs/QmdJBZw9qgjvawfMV39HpRaTdqYdnaFSDEsHM9erf3t6C6\"]}},\"version\":1}"
      }
    },
    "IERC20.sol": {
      "IERC20": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "owner", "type": "address" },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              { "internalType": "uint256", "name": "", "type": "uint256" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              { "internalType": "uint256", "name": "value", "type": "uint256" }
            ],
            "name": "approve",
            "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              { "internalType": "uint256", "name": "", "type": "uint256" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              { "internalType": "uint256", "name": "", "type": "uint256" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "to", "type": "address" },
              { "internalType": "uint256", "name": "value", "type": "uint256" }
            ],
            "name": "transfer",
            "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "from", "type": "address" },
              { "internalType": "address", "name": "to", "type": "address" },
              { "internalType": "uint256", "name": "value", "type": "uint256" }
            ],
            "name": "transferFrom",
            "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "functionDebugData": {},
            "generatedSources": [],
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x1c50cffbf03537659fa456fc2f38a9e9c634f0231068b96a5f52a5a9753e2c18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1741708992159b58d58295ad866d8cfa69022d43b440f906a9c6c918bc67ba\",\"dweb:/ipfs/Qme8napvk8oJTcyz2UpeuFHkDQgA8BFm2jic2RfHSByTX8\"]}},\"version\":1}"
      }
    },
    "IERC20Metadata.sol": {
      "IERC20Metadata": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "owner", "type": "address" },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              { "internalType": "uint256", "name": "", "type": "uint256" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              { "internalType": "uint256", "name": "value", "type": "uint256" }
            ],
            "name": "approve",
            "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              { "internalType": "uint256", "name": "", "type": "uint256" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "decimals",
            "outputs": [
              { "internalType": "uint8", "name": "", "type": "uint8" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              { "internalType": "string", "name": "", "type": "string" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              { "internalType": "string", "name": "", "type": "string" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              { "internalType": "uint256", "name": "", "type": "uint256" }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "to", "type": "address" },
              { "internalType": "uint256", "name": "value", "type": "uint256" }
            ],
            "name": "transfer",
            "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "from", "type": "address" },
              { "internalType": "address", "name": "to", "type": "address" },
              { "internalType": "uint256", "name": "value", "type": "uint256" }
            ],
            "name": "transferFrom",
            "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "functionDebugData": {},
            "generatedSources": [],
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x1c50cffbf03537659fa456fc2f38a9e9c634f0231068b96a5f52a5a9753e2c18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1741708992159b58d58295ad866d8cfa69022d43b440f906a9c6c918bc67ba\",\"dweb:/ipfs/Qme8napvk8oJTcyz2UpeuFHkDQgA8BFm2jic2RfHSByTX8\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xd6d5a0dfff9f1ffab84f5262f7ef5118aa9ff20202f9aed982b13707d8160be5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9c5176297845609eae60061c91661ab1584f3da18c802fbcb67d1a70405b1e3\",\"dweb:/ipfs/QmSaFn1GcDGYeWGETnjSKfRzV2gbAqwBZaqUzWEZQzkRA4\"]}},\"version\":1}"
      }
    },
    "draft-IERC6093.sol": {
      "IERC1155Errors": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "balance",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "needed",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "ERC1155InsufficientBalance",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "approver",
                "type": "address"
              }
            ],
            "name": "ERC1155InvalidApprover",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "idsLength",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "valuesLength",
                "type": "uint256"
              }
            ],
            "name": "ERC1155InvalidArrayLength",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              }
            ],
            "name": "ERC1155InvalidOperator",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "receiver",
                "type": "address"
              }
            ],
            "name": "ERC1155InvalidReceiver",
            "type": "error"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "sender", "type": "address" }
            ],
            "name": "ERC1155InvalidSender",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              { "internalType": "address", "name": "owner", "type": "address" }
            ],
            "name": "ERC1155MissingApprovalForAll",
            "type": "error"
          }
        ],
        "evm": {
          "bytecode": {
            "functionDebugData": {},
            "generatedSources": [],
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"draft-IERC6093.sol\":{\"keccak256\":\"0x95ff58432c2912acb75198376b6955d831e362cdc24c96de28b647d2c6177804\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://856f39586337f757fb0ba79c95167fd7b6b901619e594b7a9fb90d20addb8f16\",\"dweb:/ipfs/QmdJBZw9qgjvawfMV39HpRaTdqYdnaFSDEsHM9erf3t6C6\"]}},\"version\":1}"
      },
      "IERC20Errors": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "allowance",
                "type": "uint256"
              },
              { "internalType": "uint256", "name": "needed", "type": "uint256" }
            ],
            "name": "ERC20InsufficientAllowance",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "balance",
                "type": "uint256"
              },
              { "internalType": "uint256", "name": "needed", "type": "uint256" }
            ],
            "name": "ERC20InsufficientBalance",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "approver",
                "type": "address"
              }
            ],
            "name": "ERC20InvalidApprover",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "receiver",
                "type": "address"
              }
            ],
            "name": "ERC20InvalidReceiver",
            "type": "error"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "sender", "type": "address" }
            ],
            "name": "ERC20InvalidSender",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "ERC20InvalidSpender",
            "type": "error"
          }
        ],
        "evm": {
          "bytecode": {
            "functionDebugData": {},
            "generatedSources": [],
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"draft-IERC6093.sol\":{\"keccak256\":\"0x95ff58432c2912acb75198376b6955d831e362cdc24c96de28b647d2c6177804\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://856f39586337f757fb0ba79c95167fd7b6b901619e594b7a9fb90d20addb8f16\",\"dweb:/ipfs/QmdJBZw9qgjvawfMV39HpRaTdqYdnaFSDEsHM9erf3t6C6\"]}},\"version\":1}"
      },
      "IERC721Errors": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              },
              { "internalType": "address", "name": "owner", "type": "address" }
            ],
            "name": "ERC721IncorrectOwner",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "ERC721InsufficientApproval",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "approver",
                "type": "address"
              }
            ],
            "name": "ERC721InvalidApprover",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              }
            ],
            "name": "ERC721InvalidOperator",
            "type": "error"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "owner", "type": "address" }
            ],
            "name": "ERC721InvalidOwner",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "receiver",
                "type": "address"
              }
            ],
            "name": "ERC721InvalidReceiver",
            "type": "error"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "sender", "type": "address" }
            ],
            "name": "ERC721InvalidSender",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "ERC721NonexistentToken",
            "type": "error"
          }
        ],
        "evm": {
          "bytecode": {
            "functionDebugData": {},
            "generatedSources": [],
            "linkReferences": {},
            "object": "",
            "opcodes": "",
            "sourceMap": ""
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"draft-IERC6093.sol\":{\"keccak256\":\"0x95ff58432c2912acb75198376b6955d831e362cdc24c96de28b647d2c6177804\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://856f39586337f757fb0ba79c95167fd7b6b901619e594b7a9fb90d20addb8f16\",\"dweb:/ipfs/QmdJBZw9qgjvawfMV39HpRaTdqYdnaFSDEsHM9erf3t6C6\"]}},\"version\":1}"
      }
    }
  },
  "sources": {
    "Context.sol": { "id": 0 },
    "ERC20.sol": { "id": 1 },
    "ERC20Sample.sol": { "id": 2 },
    "IERC20.sol": { "id": 3 },
    "IERC20Metadata.sol": { "id": 4 },
    "draft-IERC6093.sol": { "id": 5 }
  }
}
